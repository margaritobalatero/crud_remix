{
  "version": 3,
  "sources": ["../../../app/routes/tasks.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\tasks.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\tasks.tsx\");\n}\n// REMIX HMR END\n\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { Task } from \"~/models/task.server\";\nimport { requireUserId } from \"~/utils/session.server\";\nimport styles from \"~/styles/task.css\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: styles\n}];\n\n// \uD83D\uDD39 Loader: fetch tasks (with optional search)\nexport const loader = async ({\n  request\n}) => {\n  await connectDB();\n  const userId = await requireUserId(request);\n  const url = new URL(request.url);\n  const q = url.searchParams.get(\"q\") || \"\";\n  let tasks;\n  if (q) {\n    tasks = await Task.find({\n      user: userId,\n      $or: [{\n        title: {\n          $regex: q,\n          $options: \"i\"\n        }\n      }, {\n        description: {\n          $regex: q,\n          $options: \"i\"\n        }\n      }]\n    }).sort({\n      createdAt: -1\n    });\n  } else {\n    tasks = await Task.find({\n      user: userId\n    }).sort({\n      createdAt: -1\n    });\n  }\n  return {\n    tasks,\n    q\n  };\n};\n\n// \uD83D\uDD39 Action: create, delete, or update task\nexport const action = async ({\n  request\n}) => {\n  await connectDB();\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n\n  // Delete task\n  if (formData.get(\"_method\") === \"delete\") {\n    await Task.findOneAndDelete({\n      _id: formData.get(\"taskId\"),\n      user: userId\n    });\n    return redirectToTasks();\n  }\n\n  // Update task\n  if (formData.get(\"_method\") === \"update\") {\n    const taskId = formData.get(\"taskId\");\n    const title = formData.get(\"title\") || \"\";\n    const description = formData.get(\"description\") || \"\";\n    const imageUrl = formData.get(\"imageUrl\") || \"\";\n    await Task.findOneAndUpdate({\n      _id: taskId,\n      user: userId\n    }, {\n      title,\n      description,\n      imageUrl\n    });\n    return redirectToTasks();\n  }\n\n  // Create task (default)\n  const title = formData.get(\"title\") || \"\";\n  const description = formData.get(\"description\") || \"\";\n  const imageUrl = formData.get(\"imageUrl\") || \"\";\n  if (!title.trim()) {\n    // simple server-side validation\n    return redirectToTasks();\n  }\n  const task = new Task({\n    user: userId,\n    title,\n    description,\n    imageUrl\n  });\n  await task.save();\n  return redirectToTasks();\n};\nfunction redirectToTasks() {\n  return {\n    headers: {\n      Location: \"/tasks\"\n    },\n    status: 302\n  };\n}\n\n// \uD83D\uDD39 Component\nexport default function Tasks() {\n  _s();\n  const {\n    tasks,\n    q\n  } = useLoaderData();\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  return <div className=\"task-container\">\r\n      <h1>Your Tasks</h1>\r\n\r\n      {/* Add new task form */}\r\n      <Form method=\"post\" className=\"task-form\">\r\n        <input type=\"text\" name=\"title\" placeholder=\"Task title\" required />\r\n        <input type=\"text\" name=\"description\" placeholder=\"Description\" />\r\n        <input type=\"text\" name=\"imageUrl\" placeholder=\"Image URL\" />\r\n        <button type=\"submit\">Add</button>\r\n      </Form>\r\n\r\n      {/* Search bar */}\r\n      <Form method=\"get\" className=\"task-search\">\r\n        <input type=\"text\" name=\"q\" defaultValue={q} placeholder=\"Search tasks...\" />\r\n        <button type=\"submit\">Search</button>\r\n      </Form>\r\n\r\n      {/* Task list */}\r\n      <ul className=\"task-list\">\r\n        {tasks.map(task => <li key={task._id} className=\"task-item\">\r\n            <div>\r\n              <strong>{task.title}</strong>\r\n              <p>{task.description}</p>\r\n              {task.imageUrl && <img src={task.imageUrl} alt={task.title} />}\r\n            </div>\r\n\r\n            <div>\r\n              {/* Details button: open modal (view mode) */}\r\n              <button type=\"button\" onClick={() => {\n            setSelectedTask(task);\n            setIsEditing(false);\n          }}>\n              \r\n                Details\r\n              </button>\r\n\r\n              {/* Edit button: open modal (edit mode) */}\r\n              <button type=\"button\" onClick={() => {\n            setSelectedTask(task);\n            setIsEditing(true);\n          }}>\n              \r\n                Edit\r\n              </button>\r\n\r\n              {/* Delete */}\r\n              <Form method=\"post\" style={{\n            display: \"inline\"\n          }}>\r\n                <input type=\"hidden\" name=\"taskId\" value={task._id} />\r\n                <button type=\"submit\" name=\"_method\" value=\"delete\">\r\n                  Delete\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          </li>)}\r\n      </ul>\r\n\r\n      {/* Modal (view OR edit) */}\r\n      {selectedTask && <div className=\"modal-backdrop\" role=\"dialog\" aria-modal=\"true\">\r\n          <div className=\"modal-box\">\r\n            {/* Task edit */}\r\n            {isEditing ? <Form method=\"post\" className=\"flex flex-col gap-2\">\r\n                <input type=\"hidden\" name=\"_method\" value=\"update\" />\r\n                <input type=\"hidden\" name=\"taskId\" value={selectedTask._id} />\r\n\r\n                <label>\r\n                  Title\r\n                  <input type=\"text\" name=\"title\" defaultValue={selectedTask.title} className=\"border p-2 rounded\" />\r\n                </label>\r\n\r\n                <label>\r\n                  Description\r\n                  <input type=\"text\" name=\"description\" defaultValue={selectedTask.description} className=\"border p-2 rounded\" />\r\n                </label>\r\n\r\n                <label>\r\n                  Image URL\r\n                  <input type=\"text\" name=\"imageUrl\" defaultValue={selectedTask.imageUrl || \"\"} className=\"border p-2 rounded\" />\r\n                </label>\r\n\r\n                <div style={{\n            display: \"flex\",\n            gap: 8\n          }}>\r\n                  <button type=\"submit\" className=\"bg-yellow-500 text-white px-4 py-2 rounded\">\r\n                    Save Changes\r\n                  </button>\r\n                  <button type=\"button\" onClick={() => {\n              setIsEditing(false);\n            }} className=\"px-4 py-2 rounded\">\n                \r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </Form> : <>\r\n                <h2>{selectedTask.title}</h2>\r\n                <p>{selectedTask.description}</p>\r\n                {selectedTask.imageUrl && <img src={selectedTask.imageUrl} alt={selectedTask.title} />}\r\n                <div style={{\n            marginTop: 12\n          }}>\r\n                  <button type=\"button\" onClick={() => {\n              setIsEditing(true);\n            }} className=\"px-3 py-1 rounded\">\n                \r\n                    Edit\r\n                  </button>\r\n                </div>\r\n              </>}\r\n\r\n            <button onClick={() => {\n          setSelectedTask(null);\n          setIsEditing(false);\n        }} className=\"mt-4\">\n            \r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>}\r\n    </div>;\n}\n_s(Tasks, \"g3WDLNUCuhQyCp1GmmeLoZb9hsc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAA,gBAAyB;AACzB,gBAA0B;AAC1B,kBAAqB;AACrB,qBAA8B;;;;;;AAoHxB;AA3IN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AAC1B;AASO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AAsGc,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAS,IAAI;AACrD,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,SAAO,mDAAC,SAAI,WAAU,kBAClB;AAAA,uDAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IAGd,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,cAAa,UAAQ,QAAjE;AAAA;AAAA;AAAA;AAAA,aAAkE;AAAA,MAClE,mDAAC,WAAM,MAAK,QAAO,MAAK,eAAc,aAAY,iBAAlD;AAAA;AAAA;AAAA;AAAA,aAAgE;AAAA,MAChE,mDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,aAAY,eAA/C;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC3D,mDAAC,YAAO,MAAK,UAAS,mBAAtB;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SAJ3B;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAGA,mDAAC,QAAK,QAAO,OAAM,WAAU,eAC3B;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,KAAI,cAAc,GAAG,aAAY,qBAAzD;AAAA;AAAA;AAAA;AAAA,aAA2E;AAAA,MAC3E,mDAAC,YAAO,MAAK,UAAS,sBAAtB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,SAF9B;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAGA,mDAAC,QAAG,WAAU,aACX,gBAAM,IAAI,UAAQ,mDAAC,QAAkB,WAAU,aAC5C;AAAA,yDAAC,SACC;AAAA,2DAAC,YAAQ,eAAK,SAAd;AAAA;AAAA;AAAA;AAAA,eAAoB;AAAA,QACpB,mDAAC,OAAG,eAAK,eAAT;AAAA;AAAA;AAAA;AAAA,eAAqB;AAAA,QACpB,KAAK,YAAY,mDAAC,SAAI,KAAK,KAAK,UAAU,KAAK,KAAK,SAAnC;AAAA;AAAA;AAAA;AAAA,eAA0C;AAAA,WAH9D;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,mDAAC,SAEC;AAAA,2DAAC,YAAO,MAAK,UAAS,SAAS,MAAM;AACvC,0BAAgB,IAAI;AACpB,uBAAa,KAAK;AAAA,QACpB,GAAG,uBAHC;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QAGA,mDAAC,YAAO,MAAK,UAAS,SAAS,MAAM;AACvC,0BAAgB,IAAI;AACpB,uBAAa,IAAI;AAAA,QACnB,GAAG,oBAHC;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,QAGA,mDAAC,QAAK,QAAO,QAAO,OAAO;AAAA,UAC7B,SAAS;AAAA,QACX,GACM;AAAA,6DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAO,KAAK,OAA/C;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,UACpD,mDAAC,YAAO,MAAK,UAAS,MAAK,WAAU,OAAM,UAAS,sBAApD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WA3BF;AAAA;AAAA;AAAA;AAAA,aA4BA;AAAA,SAnCwB,KAAK,KAAd;AAAA;AAAA;AAAA;AAAA,WAoCjB,CAAK,KArCT;AAAA;AAAA;AAAA;AAAA,WAsCA;AAAA,IAGC,gBAAgB,mDAAC,SAAI,WAAU,kBAAiB,MAAK,UAAS,cAAW,QACtE,6DAAC,SAAI,WAAU,aAEZ;AAAA,kBAAY,mDAAC,QAAK,QAAO,QAAO,WAAU,uBACvC;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,WAAU,OAAM,YAA1C;AAAA;AAAA;AAAA;AAAA,eAAmD;AAAA,QACnD,mDAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAO,aAAa,OAAvD;AAAA;AAAA;AAAA;AAAA,eAA4D;AAAA,QAE5D,mDAAC,WAAM;AAAA;AAAA,UAEL,mDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,cAAc,aAAa,OAAO,WAAU,wBAA5E;AAAA;AAAA;AAAA;AAAA,iBAAiG;AAAA,aAFnG;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC,WAAM;AAAA;AAAA,UAEL,mDAAC,WAAM,MAAK,QAAO,MAAK,eAAc,cAAc,aAAa,aAAa,WAAU,wBAAxF;AAAA;AAAA;AAAA;AAAA,iBAA6G;AAAA,aAF/G;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC,WAAM;AAAA;AAAA,UAEL,mDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,cAAc,aAAa,YAAY,IAAI,WAAU,wBAAxF;AAAA;AAAA;AAAA;AAAA,iBAA6G;AAAA,aAF/G;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC,SAAI,OAAO;AAAA,UAChB,SAAS;AAAA,UACT,KAAK;AAAA,QACP,GACQ;AAAA,6DAAC,YAAO,MAAK,UAAS,WAAU,8CAA6C,4BAA7E;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,YAAO,MAAK,UAAS,SAAS,MAAM;AACzC,yBAAa,KAAK;AAAA,UACpB,GAAG,WAAU,qBAAoB,sBAF3B;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,WAhCS;AAAA;AAAA;AAAA;AAAA,aAiCX,IAAU,sFACR;AAAA,2DAAC,QAAI,uBAAa,SAAlB;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,QACxB,mDAAC,OAAG,uBAAa,eAAjB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,QAC5B,aAAa,YAAY,mDAAC,SAAI,KAAK,aAAa,UAAU,KAAK,aAAa,SAAnD;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,QACpF,mDAAC,SAAI,OAAO;AAAA,UAChB,WAAW;AAAA,QACb,GACQ,6DAAC,YAAO,MAAK,UAAS,SAAS,MAAM;AACzC,uBAAa,IAAI;AAAA,QACnB,GAAG,WAAU,qBAAoB,oBAF3B;AAAA;AAAA;AAAA;AAAA,eAKA,KARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WAbQ;AAAA;AAAA;AAAA;AAAA,aAcV;AAAA,MAEF,mDAAC,YAAO,SAAS,MAAM;AACzB,wBAAgB,IAAI;AACpB,qBAAa,KAAK;AAAA,MACpB,GAAG,WAAU,QAAO,qBAHhB;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SAzDF;AAAA;AAAA;AAAA;AAAA,WA0DA,KA3Da;AAAA;AAAA;AAAA;AAAA,WA4Df;AAAA,OAvHC;AAAA;AAAA;AAAA;AAAA,SAwHL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
