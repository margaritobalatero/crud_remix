{
  "version": 3,
  "sources": ["../../../app/routes/tasks.$taskId.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\tasks.$taskId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\tasks.$taskId.tsx\");\n  import.meta.hot.lastModified = \"1756489154096.955\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { Task } from \"~/models/task.server\";\nimport { requireUserId } from \"~/utils/session.server\";\nexport const loader = async ({\n  params,\n  request\n}) => {\n  await connectDB();\n  const userId = await requireUserId(request);\n  const task = await Task.findOne({\n    _id: params.taskId,\n    user: userId\n  });\n  if (!task) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return {\n    task\n  };\n};\nexport default function TaskDetail() {\n  _s();\n  const {\n    task\n  } = useLoaderData();\n  return <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold\">{task.title}</h1>\r\n      <div className=\"mt-2 text-gray-700\" dangerouslySetInnerHTML={{\n      __html: task.description\n    }} />\r\n      {task.imageUrl && <img src={task.imageUrl} alt={task.title} className=\"mt-4 max-h-80 rounded\" />}\r\n      <a href=\"/tasks\" className=\"inline-block mt-6 bg-blue-500 text-white px-4 py-2 rounded\">\r\n        Back to Tasks\r\n      </a>\r\n    </div>;\n}\n_s(TaskDetail, \"G2x41XR0eTNo1T7Y73bRL8XAWGY=\", false, function () {\n  return [useLoaderData];\n});\n_c = TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,gBAA0B;AAC1B,kBAAqB;AACrB,qBAA8B;AA0BxB;AAjDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AA0Be,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,OAClB;AAAA,uDAAC,QAAG,WAAU,sBAAsB,eAAK,SAAzC;AAAA;AAAA;AAAA;AAAA,WAA+C;AAAA,IAC/C,mDAAC,SAAI,WAAU,sBAAqB,yBAAyB;AAAA,MAC7D,QAAQ,KAAK;AAAA,IACf,KAFE;AAAA;AAAA;AAAA;AAAA,WAEC;AAAA,IACA,KAAK,YAAY,mDAAC,SAAI,KAAK,KAAK,UAAU,KAAK,KAAK,OAAO,WAAU,2BAApD;AAAA;AAAA;AAAA;AAAA,WAA4E;AAAA,IAC9F,mDAAC,OAAE,MAAK,UAAS,WAAU,8DAA6D,6BAAxF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OARG;AAAA;AAAA;AAAA;AAAA,SASL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
