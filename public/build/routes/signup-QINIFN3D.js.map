{
  "version": 3,
  "sources": ["../../../app/routes/signup.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\signup.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\signup.tsx\");\n  import.meta.hot.lastModified = \"1756486425401.7395\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { connectDB } from \"~/utils/db.server\";\nimport { User } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/utils/session.server\";\nimport bcrypt from \"bcryptjs\";\nimport { redirect } from \"@remix-run/node\";\nexport const meta = () => {\n  return [{\n    title: \"Signup - Remix CRUD\"\n  }];\n};\n\n// Redirect logged-in users to /tasks\nexport const loader = async ({\n  request\n}) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/tasks\");\n  return null;\n};\nexport const action = async ({\n  request\n}) => {\n  await connectDB();\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const existing = await User.findOne({\n    email\n  });\n  if (existing) return {\n    error: \"Email already registered\"\n  };\n  const hashed = await bcrypt.hash(password, 10);\n  const user = new User({\n    username,\n    email,\n    password: hashed\n  });\n  await user.save();\n  return createUserSession(user._id.toString(), \"/tasks\");\n};\nexport default function Signup() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"max-w-md mx-auto mt-12 p-6 bg-white shadow-md rounded-lg\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Signup</h1>\r\n\r\n      {actionData?.error && <p className=\"mb-3 text-sm text-red-600\">{actionData.error}</p>}\r\n\r\n      <Form method=\"post\" className=\"flex flex-col gap-3\">\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" required className=\"border rounded px-3 py-2\" />\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required className=\"border rounded px-3 py-2\" />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required className=\"border rounded px-3 py-2\" />\r\n        <button type=\"submit\" className=\"bg-green-600 text-white rounded px-4 py-2 hover:bg-green-700\">\r\n          Signup\r\n        </button>\r\n      </Form>\r\n    </div>;\n}\n_s(Signup, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,gBAA0B;AAC1B,kBAAqB;AACrB,qBAA6C;AAC7C,sBAAmB;AACnB,kBAAyB;AA0CnB;AAnEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AASO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAiCe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,WAAU,4DAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,sBAAxC;AAAA;AAAA;AAAA;AAAA,WAA8C;AAAA,IAE7C,YAAY,SAAS,mDAAC,OAAE,WAAU,6BAA6B,qBAAW,SAArD;AAAA;AAAA;AAAA;AAAA,WAA2D;AAAA,IAEjF,mDAAC,QAAK,QAAO,QAAO,WAAU,uBAC5B;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,aAAY,YAAW,UAAQ,MAAC,WAAU,8BAA7E;AAAA;AAAA;AAAA;AAAA,aAAwG;AAAA,MACxG,mDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,aAAY,SAAQ,UAAQ,MAAC,WAAU,8BAAxE;AAAA;AAAA;AAAA;AAAA,aAAmG;AAAA,MACnG,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,aAAY,YAAW,UAAQ,MAAC,WAAU,8BAAjF;AAAA;AAAA;AAAA;AAAA,aAA4G;AAAA,MAC5G,mDAAC,YAAO,MAAK,UAAS,WAAU,gEAA+D,sBAA/F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAZG;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
